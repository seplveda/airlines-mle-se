name: 'Continuous Delivery'

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r production-requirements.txt
        pip install -r production-test-requirements.txt
    
    - name: Run tests before deployment
      run: |
        python -m pytest tests/model/ tests/api/ -v
    
    - name: Set up Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    
    - name: Configure Docker for GCP
      run: gcloud auth configure-docker
    
    - name: Build Docker image
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/latam-challenge:${{ github.sha }} .

    - name: Push to Google Container Registry
      run: |
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/latam-challenge:${{ github.sha }}
    
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy latam-challenge \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/latam-challenge:${{ github.sha }} \
          --platform managed \
          --region southamerica-west1 \
          --allow-unauthenticated \
          --port 8080 \
          --memory 1Gi \
          --cpu 1
  
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r production-requirements.txt
        pip install -r production-test-requirements.txt
    
    - name: Run model tests
      run: |
        python -m pytest tests/model/ -v
    
    - name: Run API tests
      run: |
        python -m pytest tests/api/ -v